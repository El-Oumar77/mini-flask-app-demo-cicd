name: push on prod and deploy docker
on:
  push:
    branches: [ main ]
  
jobs:
  # lint_src:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python 3.x
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.x'
  #     - name: Install and Run flake8
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install flake8
      # Would reformat but would not update the current repo
      # Use this code formater before pushing your code
      # - uses: psf/black@stable 
      #   with:
      #     options: "--verbose"
      #     src: "./src"
      #     version: "~= 22.0"
      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     # flake8 flaskr --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 src/mini_api.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  run_tests:
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          # flake8 --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 src/mini_api.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          flake8 tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run tests
        run: |
          python -m unittest tests.test_mini_api.TestAPIEndpoints -v

  deploy:
    needs: [run_tests]
    runs-on: ubuntu-latest
    environment: env-cicd
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build Docker image
        run: docker build . -t mgrum/flask-example-cicd:latest
      - name: Push Docker image
        run: docker push mgrum/flask-example-cicd:latest

